<div class="wrapper">
    <div class="row" id="header">
        <%= render 'shared/header' %>
    </div>
    
    <div class="row">
      <div class="columns small-6 large-2">
        <div id="return" class="button export-button float-left">Voltar</div>
      </div>
      <div class="columns small-6 large-8">
        <div id=change_semester class="row">
            <div id="info_semester" class="text-center info-text">Histórico</div>
        </div>
      </div>
      <div class="columns small-12 large-2">
        <div id="historic_record" class="button export-button float-right">Atualizar Histórico</div>
      </div>
    </div>
    
    <div id="info_historic" class="row">
        <div class="callout secondary" data-closable>
            <div class="row">
                <div class="small-12 columns">
                    <div class="small-6 columns float-left">
                        <div class="subtext float-left">NOME: <%= @student.name.upcase %></div>
                    </div> 
                    <div class="small-6 columns float-right">
                        <div id="workload_ob" class="subtext float-right">CARGA HORÁRIA OBRIGATÓRIA: <%= @ch_ob %></div>
                    </div>
                </div>
            </div>
             <div class="row">
                <div class="small-12 columns">
                    <div class="small-6 columns float-left">
                        <div class="subtext float-left">MATRÍCULA: <%= @student.matricula %></div>
                    </div> 
                    <div class="small-6 columns float-right">
                        <div id="workload_op" class="subtext float-right">CARGA HORÁRIA OPTATIVA: <%= @ch_op %></div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="small-12 columns">
                    <div class="small-6 columns float-left">
                        <div class="subtext float-left">CURSO: <%= @course.name %></div>
                    </div>    
                    <div class="small-6 columns float-right">
                        <div id="workload" class="subtext float-right">CARGA HORÁRIA TOTAL: <%= @ch %></div>
                    </div>
                </div>
            </div>
          <button class="close-button" aria-label="Dismiss alert" type="button" data-close>
            <span aria-hidden="true">&times;</span>
          </button>
        </div>
    </div>

    <div class="row">
        <ul id="blockTabs" class="tabs" data-tabs>
            <li id="historic" class="tabs-title is-active" aria-selected="true"><a href="#historic">Histórico</a></li>
        </ul>
    </div>

    <div class="row block tabs-content" data-tabs-content="blockTabs">
        <div id="historic" class="tabs-panel no-padding is-active">
            <div id="historic_show">
                
                <div class="row">
                    <div class="small-12 columns">
                        <%= render partial: 'historic_table', locals: { table_id: 'large_table_historic', table_class: 'historic-table unstriped large-table'} %>
                    </div>
                </div>
            </div>

            <div id="historic_insert" style="display:none">
                <div class="row" style="margin-bottom: 10px;">
                    <div class="small-12 columns text-center text">
                        Cadastre o seu histórico, copie e cole na planilha abaixo as informações do <a href="https://siac.ufba.br" target="_blank">SIAC</a>
                        obtidas no menu consulta, componentes curriculares cursados.
                    </div>
                </div>
                <div class="row" style="margin-bottom: 20px;">
                    <div id="handsontable" class="hot handsontable htRowHeaders htColumnHeaders"></div>
                </div>
                <div class="row">
                    <div class="small-12 columns">
                        <a id="moreLine" class="float-right">Adicionar +10 Linhas</a>
                    </div>
                </div>
            </div>
            
            <div class="row">
              <div class="small-12 columns">
                <span id="goToTop" class="go-to-top">▲ Topo</span>
              </div>
            </div>
        </div>
    </div>
    
</div>
<%= render 'shared/footer' %>

<% content_for :script do %>
<script>
    mixpanel.track("Acessou pagina de registro de histórico", { "matricula_aluno": "<%= @student.matricula %>" });

    var historic_student = <%= raw @historic  %>;
    var step = 1;
    var inserted_historic = [];

    var $container = $("#handsontable");
    var handsontable = $container.data('handsontable');
    
    $("#goToTop").click(function() {
      $('html,body').animate({
          scrollTop: $("#header").offset().top
      }, 500);
    });
    
     $("#moreLine").click(function() {
        $container = $("#handsontable");
        handsontable = $container.data('handsontable');
        var col = handsontable.countRows();
        for (var i = 0; i < 10; i++) {
            handsontable.alter('insert_row', col, 1);
        }
    })
    
    function load_historic_inserted() {
        var historic_trated = [];
        var historic_semesters = [];
        
        var get_table_historic = $container.data('handsontable').getData();
        
        var last_semester = "";
        get_table_historic.forEach(function(x){
            if(x[0] != " "){
                if((/([0-9][0-9][0-9][0-9].[0-9])/.test(x[0]))){
                    if(x[0] != last_semester){
                        last_semester = x[0];
                        historic_semesters.push(x[0]);
                    }
                }
            }
            if(x[1] != null){
                if(last_semester != "" && x[2] != null && x[3] != null && x[4] != null  && x[5] != null && x[6] != null && x[7] != null){
                    var obj_hystoric = {
                        semester_period: last_semester,
                        curricular_component: x[1] + " - " + x[2],
                        code: x[1],
                        name: x[2],
                        ch: (!x[3] || x[3] == null || x[3] == undefined || x[3] == "" || x[3].length == 0) ? '--' : x[3],
                        cr: (!x[4] || x[4] == null || x[4] == undefined || x[4] == "" || x[4].length == 0) ? '--' : x[4],
                        nt: x[5],
                        note: x[6].replace(",","."),
                        res: x[7]
                    };
                    if(obj_hystoric.res == 'AP'){
                        result = historic_trated.filter(function (el) {
                            return el.res == 'AP'
                        }).map(a => a.code);
                        if(!result.includes(obj_hystoric.code)){
                            historic_trated.push(obj_hystoric);
                        }
                    }
                    else{
                        historic_trated.push(obj_hystoric);
                    }
                }
            }
        });
        
        historic_trated.forEach(function(y){
            
        });
        
        historic_trated = groupBy(historic_trated, 'semester_period');
        
        if(historic_semesters.length > 0){
            inserted_historic = [];
            historic_semesters.forEach(function(semester){
                if (historic_trated) {
                    var obj_inserted = {
                      semester: semester,
                      disciplines_historic: historic_trated[semester]
                    };
                    if(obj_inserted.semester != null && obj_inserted.disciplines_historic != undefined && obj_inserted.disciplines_historic.length > 0){
                        inserted_historic.push(obj_inserted);
                    }
                }
            });
        }
    }
    
    function workload_result() {
        return workload_ob_result() + workload_op_result();
    }
    
    function workload_ob_result() {
        var result = 0;
        inserted_historic.forEach(function(semester){
            semester.disciplines_historic.forEach(function(d){
                if(d.res == 'AP' && d.nt == 'OB'){
                    result += parseInt(d.ch, 10);
                }
            });
        });
        return result;
    }
    
    function workload_op_result() {
        var result = 0;
        inserted_historic.forEach(function(semester){
            semester.disciplines_historic.forEach(function(d){
                if(d.res == 'AP' && d.nt == 'OP'){
                    result += parseInt(d.ch, 10);
                }
            });
        });
        return result;
    }
    
    function compare(a, b) {
      const bandA = a.semester;
      const bandB = b.semester;
      const bandA_year = parseInt(bandA.substr(0, 4))
      const bandB_year = parseInt(bandB.substr(0, 4))
      const bandA_period = parseInt(bandA.substr(5, 1))
      const bandB_period = parseInt(bandA.substr(5, 1))
      let comparison = 0;
      if ((bandA_year > bandB_year) || ((bandA_year == bandB_year) && bandA_period > bandB_period)) {
        comparison = 1;
      } else if ((bandA_year < bandB_year) || ((bandA_year == bandB_year) && bandA_period < bandB_period)) {
        comparison = -1;
      }
      return comparison;
    }
    
    function historic_inserted_result_table() {
        $("#large_table_historic tbody").empty();
        $("#large_table_historic tbody").append(get_result_table_history(inserted_historic.sort(compare)));
        if(inserted_historic.length == 0){
            var message = 'Histórico sem nenhum semestre.';
            var $toastContent;
            $toastContent = $('<span>' + message + '</span>');
            toastr.info($toastContent)
        }
        $("#workload_ob").text("CARGA HORÁRIA OBRIGATÓRIA: " + workload_ob_result());
        $("#workload_op").text("CARGA HORÁRIA OPTATIVA: " + workload_op_result());
        $("#workload").text("CARGA HORÁRIA TOTAL: " + workload_result());
    }
    
    function load_historic() {
        if(historic_student.length > 0){
            $("#large_table_historic tbody").empty();
            $("#large_table_historic tbody").append(get_result_table_history(historic_student));    
        }
        inserted_historic = historic_student;
    }
    
    function load_handsontable() {
        var data = [];
        
        $container = $("#handsontable");
        handsontable = $container.data('handsontable');
        
        if(inserted_historic.length > 0){
            inserted_historic.forEach(function(x){
                var data_semester = [];
                var item_semester = x.semester;
                x.disciplines_historic.forEach(function(d){
                   item_row = [" ", d.code, d.name, (d.ch == 0 ? '--' : d.ch), (d.cr == 0 ? '--' : d.cr), d.nt, ((['TR', 'RF'].includes(d.res) ? '--' : d.note)), d.res] 
                   data_semester.push(item_row);
                });
                data_semester.push([]);
                data_semester[0][0] = x.semester;
                data = data.concat(data_semester);
            });
            data.push([]);
            
            //HANDSONTABLE
            var config = {
                data: data,
                preventOverflow: 'horizontal',
                startCols: 8,
                startRows: 10,
                className: "htCenter",
                rowHeaders: true,
                colHeaders: ['Período', 'Código', 'Disciplina', 'CH', 'CR', 'NT', 'Nota', 'RES'],
                licenseKey: "non-commercial-and-evaluation",
                colWidths: [80, 80, 645, 50, 50, 50, 50, 50],
                headerTooltips: {
                    rows: false,
                    columns: true,
                    onlyTrimmed: true
                }
            };
        }
        else {
            //HANDSONTABLE
            var config = {
            preventOverflow: 'horizontal',
            startCols: 8,
            startRows: 10,
            className: "htCenter",
            rowHeaders: true,
            colHeaders: ['Período', 'Código', 'Disciplina', 'CH', 'CR', 'NT', 'Nota', 'RES'],
            licenseKey: "non-commercial-and-evaluation",
            colWidths: [80, 80, 645, 50, 50, 50, 50, 50],
            headerTooltips: {
                rows: false,
                columns: true,
                onlyTrimmed: true
            }
            };
        }
    
        $("#handsontable").handsontable(config);
    }
    
    function show_message_validade_item(item_historic, ex){
        var message = '';
        var $toastContent;
        message = 'Semeste: ' + item_historic.semester_period + ', Disciplina: ' + item_historic.curricular_component + '. ' + ex;
        $toastContent = $('<span>' + message + '</span>');
        toastr.error($toastContent)
    }
    
    function validate_historic_value(){
        var validate = true;
        inserted_historic.forEach(function(x){
            x.disciplines_historic.forEach(function(y){
                if(['RR', 'TR', 'RF'].includes(y.res.toUpperCase()) && y.ch != '--'){
                    validate = false;
                    show_message_validade_item(y, "Carga Horária(CH) inválida, para o Resultado(RES).");
                }
                if(['RR', 'TR'].includes(y.res.toUpperCase()) && y.cr != '--'){
                    validate = false;
                    show_message_validade_item(y, "Crédito(CR) inválido, para o Resultado(RES).");
                }
                if(['AP'].includes(y.res.toUpperCase()) && parseFloat(y.note) < 5){
                    validate = false;
                    show_message_validade_item(y, "Nota inválida, para o Resultado(RES): Aprovado(AP).");
                }
                if(['TR', 'RF'].includes(y.res.toUpperCase()) && y.note != '--'){
                    validate = false;
                    show_message_validade_item(y, "Nota inválida, para o Resultado(RES): Trancamento(TR).");
                }
                if(['RR'].includes(y.res.toUpperCase()) && parseFloat(y.note) > 5){
                    validate = false;
                    show_message_validade_item(y, "Nota inválida, para o Resultado(RES): Reprovado(RR).");
                }
            });
        });
        return validate;
    }
    
    function validate_historic_field(){
        var validate = true;
        inserted_historic.forEach(function(x){
            x.disciplines_historic.forEach(function(y){
                if(!['OB', 'OP', '--'].includes(y.nt.toUpperCase())){
                    validate = false;
                    show_message_validade_item(y, "Natureza(NT) inválida, Legenda NT: OB-Obrigatoria, OP-Optativa.");
                }
                if(!['AP', 'RF', 'RR', 'TR', 'DI', 'DU'].includes(y.res.toUpperCase())){
                    validate = false;
                    show_message_validade_item(y, "Resultado(RES) inválido, Legenda RES: AP-Aprovado, RF-Reprovado Frequencia, RR-Reprovado, TR-Trancamento., DI-Dispensa , DU-Dispensa UFBA");
                }
                if(y.note != '--' && !(parseFloat(y.note) >= 0.0 && parseFloat(y.note) <= 10)){
                    validate = false;
                    show_message_validade_item(y, "Nota inválida.");
                }
                if(!(/([0-9]{1,3})|([\x2D]{2})$/.test(y.ch))){
                    validate = false;
                    show_message_validade_item(y, "Carga Horária(CH) inválida.");
                }
                if(!(/([0-9]{1,3})|([\x2D]{2})$/.test(y.cr))){
                    validate = false;
                    show_message_validade_item(y, "Crédito(CR) inválido.");
                }
            });
        });
        return validate;
    }

    function complete_record() {
        historic_student = inserted_historic;
        $.ajax({
          url: "/historic",
          type: "post",
          data: {
              data_historic: JSON.stringify(historic_student)
          }
        });
    }
    
    $("#historic_record").click(function() {
        if($("#historic_record").text() === 'Concluir' && step == 3){
            complete_record();
        }
        else{
            if(step == 2){
                load_historic_inserted();
                if(validate_historic_field() && validate_historic_value()){
                    step++;
                    load_step(); 
                }
            }
            else{
                step++;
                load_step();   
            }
        }
    });
    
    $("#return").click(function() {
        step--;
        load_step();
    });
    
    load_step = function() {
        if(step == 1){
            load_historic();
            $("#historic_record").text('Atualizar Histórico');
            $("#historic_insert").hide();
            $("#historic_show").show();
        }
        else if (step == 2){
            load_handsontable();
            $("#historic_record").text('Próximo');
            $("#historic_show").hide();
            $("#historic_insert").show();
        }
        else if (step == 3){
            historic_inserted_result_table();
            $("#historic_record").text('Concluir');
            $("#historic_show").show();
            $("#historic_insert").hide();
        }
        step == 1 ? $("#return").css( {'visibility': 'hidden'}) : $("#return").css( {'visibility': 'visible'});
    }
    
    $(document).ready(function() {
        load_step();
    });
    
</script>
<% end %>